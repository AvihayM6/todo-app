{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await axios.get('http://localhost:8000/todos');\n  console.log('fetchTodos response', response);\n  return response.data;\n});\nexport const addSingleTodo = createAsyncThunk('todos/addSingleTodo', async action => {\n  const response = await axios.post('http://localhost:8000/todos', [{\n    text: action.payload\n  }]);\n  return response.data;\n});\n\n/* export const editProduct = createAsyncThunk(\n  'products/editProduct',\n  async (productObj: { id: string, fireProduct: FireProduct }, thunkAPI: any) => {\n\n    var updates: { [key: string]: FireProduct } = {};\n    updates['/allProducts/' + productObj.id] = productObj.fireProduct;\n\n    database.ref().update(updates, (error) => {\n      if (error) {\n        // The write failed...\n        console.log(\"editProduct error\", error);\n        return thunkAPI.rejectWithValue(error);\n      } else { */\n\nconst todoSlice = createSlice({\n  name: 'addTodo',\n  initialState: [],\n  reducers: {\n    addTodo: (state, action) => {\n      if (action.payload.trim().length !== 0 && !state.includes(action.payload.trim())) {\n\n        /* state.push(action.payload) */\n      }\n    },\n    removeTodo: (state, action) => {\n      state.splice(state.indexOf(action.payload), 1);\n    },\n    removeAllTodos: state => {\n      state.splice(0, state.length);\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.fulfilled, (state, action) => {\n      console.log(state);\n      return action.payload;\n    });\n    builder.addCase(addSingleTodo.fulfilled, (state, action) => {\n      console.log(state);\n      return action.payload;\n    });\n  }\n});\nexport const {\n  addTodo,\n  removeTodo,\n  removeAllTodos\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchTodos","response","get","console","log","data","addSingleTodo","action","post","text","payload","todoSlice","name","initialState","reducers","addTodo","state","trim","length","includes","removeTodo","splice","indexOf","removeAllTodos","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["/Users/avihaymaman/Desktop/todo-app/frontend/src/state-management/TodoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'\n\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await axios.get('http://localhost:8000/todos')\n  console.log('fetchTodos response', response)\n  return response.data;\n})\n\nexport const addSingleTodo = createAsyncThunk('todos/addSingleTodo', async (action) => {\n  const response = await axios.post('http://localhost:8000/todos', [{\n    text: action.payload,\n  }])\n  return response.data;\n})\n\n\n/* export const editProduct = createAsyncThunk(\n  'products/editProduct',\n  async (productObj: { id: string, fireProduct: FireProduct }, thunkAPI: any) => {\n\n    var updates: { [key: string]: FireProduct } = {};\n    updates['/allProducts/' + productObj.id] = productObj.fireProduct;\n\n    database.ref().update(updates, (error) => {\n      if (error) {\n        // The write failed...\n        console.log(\"editProduct error\", error);\n        return thunkAPI.rejectWithValue(error);\n      } else { */\n\n\nconst todoSlice = createSlice({\n    name: 'addTodo',\n    initialState: [],\n    reducers: {\n      addTodo: (state, action) => {\n        if(action.payload.trim().length !== 0 && !state.includes(action.payload.trim())){\n          \n          \n          /* state.push(action.payload) */\n        }\n      },\n      removeTodo: (state, action) => {\n        state.splice(state.indexOf(action.payload), 1)\n      },\n      removeAllTodos: (state) => {\n        state.splice(0,state.length)\n      },\n    },\n    extraReducers: (builder) => {\n      builder.addCase(fetchTodos.fulfilled, (state, action) => {\n        console.log(state)\n        return action.payload\n      })\n      builder.addCase(addSingleTodo.fulfilled, (state, action) => {\n        console.log(state)\n        return action.payload\n      })\n    },\n})\n\nexport const { addTodo, removeTodo, removeAllTodos } = todoSlice.actions\nexport default todoSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMG,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,6BAA6B,CAAC;EAC/DC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEH,QAAQ,CAAC;EAC5C,OAAOA,QAAQ,CAACI,IAAI;AACtB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAGR,gBAAgB,CAAC,qBAAqB,EAAE,MAAOS,MAAM,IAAK;EACrF,MAAMN,QAAQ,GAAG,MAAMF,KAAK,CAACS,IAAI,CAAC,6BAA6B,EAAE,CAAC;IAChEC,IAAI,EAAEF,MAAM,CAACG;EACf,CAAC,CAAC,CAAC;EACH,OAAOT,QAAQ,CAACI,IAAI;AACtB,CAAC,CAAC;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,MAAMM,SAAS,GAAGd,WAAW,CAAC;EAC1Be,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAET,MAAM,KAAK;MAC1B,IAAGA,MAAM,CAACG,OAAO,CAACO,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,IAAI,CAACF,KAAK,CAACG,QAAQ,CAACZ,MAAM,CAACG,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC,EAAC;;QAG9E;MAAA;IAEJ,CAAC;IACDG,UAAU,EAAEA,CAACJ,KAAK,EAAET,MAAM,KAAK;MAC7BS,KAAK,CAACK,MAAM,CAACL,KAAK,CAACM,OAAO,CAACf,MAAM,CAACG,OAAO,CAAC,EAAE,CAAC,CAAC;IAChD,CAAC;IACDa,cAAc,EAAGP,KAAK,IAAK;MACzBA,KAAK,CAACK,MAAM,CAAC,CAAC,EAACL,KAAK,CAACE,MAAM,CAAC;IAC9B;EACF,CAAC;EACDM,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAC1B,UAAU,CAAC2B,SAAS,EAAE,CAACX,KAAK,EAAET,MAAM,KAAK;MACvDJ,OAAO,CAACC,GAAG,CAACY,KAAK,CAAC;MAClB,OAAOT,MAAM,CAACG,OAAO;IACvB,CAAC,CAAC;IACFe,OAAO,CAACC,OAAO,CAACpB,aAAa,CAACqB,SAAS,EAAE,CAACX,KAAK,EAAET,MAAM,KAAK;MAC1DJ,OAAO,CAACC,GAAG,CAACY,KAAK,CAAC;MAClB,OAAOT,MAAM,CAACG,OAAO;IACvB,CAAC,CAAC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,OAAO;EAAEK,UAAU;EAAEG;AAAe,CAAC,GAAGZ,SAAS,CAACiB,OAAO;AACxE,eAAejB,SAAS,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}