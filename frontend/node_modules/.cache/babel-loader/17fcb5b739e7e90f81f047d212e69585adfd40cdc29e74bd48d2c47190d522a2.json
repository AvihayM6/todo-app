{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await axios.get('http://localhost:8000/todos');\n  console.log('fetchTodos response', response);\n  return response.data;\n});\nexport const addSingleTodo = createAsyncThunk('todos/addSingleTodo', async todo => {\n  const response = await axios.post('http://localhost:8000/todos', {\n    text: todo\n  });\n  return response.data;\n});\nexport const removeSingleTodo = createAsyncThunk('todos/removeSingleTodo', async todoId => {\n  const response = await axios.delete(`http://localhost:8000/todos/${todoId}`, {\n    data: {\n      _id: todoId\n    }\n  });\n  return response.data;\n});\nexport const removeAllTodos = createAsyncThunk('todos/removeSingleTodo', async todoId => {\n  const response = await axios.delete(`http://localhost:8000/todos/${todoId}`, {\n    data: {\n      _id: todoId\n    }\n  });\n  return response.data;\n});\n\n/* export const editProduct = createAsyncThunk(\n  'products/editProduct',\n  async (productObj: { id: string, fireProduct: FireProduct }, thunkAPI: any) => {\n\n    var updates: { [key: string]: FireProduct } = {};\n    updates['/allProducts/' + productObj.id] = productObj.fireProduct;\n\n    database.ref().update(updates, (error) => {\n      if (error) {\n        // The write failed...\n        console.log(\"editProduct error\", error);\n        return thunkAPI.rejectWithValue(error);\n      } else { */\n\nconst todoSlice = createSlice({\n  name: 'todo',\n  initialState: {\n    todos: [],\n    todoAdded: false\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.fulfilled, (state, action) => {\n      state.todos = action.payload;\n      console.log('@@', state.todos);\n      state.todoAdded = false;\n    });\n    builder.addCase(addSingleTodo.fulfilled, (state, action) => {\n      state.todos.push(action.payload);\n      state.todoAdded = true;\n    });\n    builder.addCase(removeSingleTodo.fulfilled, (state, action) => {\n      state.todos = state.todos.filter(todo => todo._id !== action.payload);\n      state.todoAdded = true;\n    });\n    builder.addCase(removeSingleTodo.fulfilled, (state, action) => {\n      state.todos = state.todos.filter(todo => todo._id !== action.payload);\n      state.todoAdded = true;\n    });\n  }\n});\nexport const {} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","fetchTodos","response","get","console","log","data","addSingleTodo","todo","post","text","removeSingleTodo","todoId","delete","_id","removeAllTodos","todoSlice","name","initialState","todos","todoAdded","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","filter","actions","reducer"],"sources":["/Users/avihaymaman/Desktop/todo-app/frontend/src/state-management/TodoSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios'\n\nexport const fetchTodos = createAsyncThunk('todos/fetchTodos', async () => {\n  const response = await axios.get('http://localhost:8000/todos')\n  console.log('fetchTodos response', response)\n  return response.data\n})\n\nexport const addSingleTodo = createAsyncThunk('todos/addSingleTodo', async (todo) => {\n  const response = await axios.post('http://localhost:8000/todos', {\n    text: todo,\n  })\n  return response.data\n})\n\nexport const removeSingleTodo = createAsyncThunk('todos/removeSingleTodo', async (todoId) => {\n  const response = await axios.delete(`http://localhost:8000/todos/${todoId}`,{ data: { _id: todoId } })\n  return response.data\n})\n\nexport const removeAllTodos = createAsyncThunk('todos/removeSingleTodo', async (todoId) => {\n  const response = await axios.delete(`http://localhost:8000/todos/${todoId}`,{ data: { _id: todoId } })\n  return response.data\n})\n\n\n/* export const editProduct = createAsyncThunk(\n  'products/editProduct',\n  async (productObj: { id: string, fireProduct: FireProduct }, thunkAPI: any) => {\n\n    var updates: { [key: string]: FireProduct } = {};\n    updates['/allProducts/' + productObj.id] = productObj.fireProduct;\n\n    database.ref().update(updates, (error) => {\n      if (error) {\n        // The write failed...\n        console.log(\"editProduct error\", error);\n        return thunkAPI.rejectWithValue(error);\n      } else { */\n\n\nconst todoSlice = createSlice({\n    name: 'todo',\n    initialState: { \n      todos: [],\n      todoAdded: false,\n    },\n    reducers: {\n    },\n    extraReducers: (builder) => {\n      builder.addCase(fetchTodos.fulfilled, (state, action) => {\n        state.todos = action.payload\n        console.log('@@', state.todos)\n        state.todoAdded = false\n      })\n      builder.addCase(addSingleTodo.fulfilled, (state, action) => {\n        state.todos.push(action.payload)\n        state.todoAdded = true\n      })\n      builder.addCase(removeSingleTodo.fulfilled, (state, action) => {\n        state.todos = state.todos.filter(todo => todo._id !== action.payload)\n        state.todoAdded = true\n      })\n      builder.addCase(removeSingleTodo.fulfilled, (state, action) => {\n        state.todos = state.todos.filter(todo => todo._id !== action.payload)\n        state.todoAdded = true\n      })\n    },\n})\n\nexport const { } = todoSlice.actions\nexport default todoSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}